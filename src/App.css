#root {
  width: 100%;
  height: 100%;
}

.app-root { width: 100%; height: 100%; display: grid; place-items: center; }


.controls { display: flex; gap: 12px; align-items: center; }

.control {
  display: flex;
  gap: 8px;
  align-items: center;
  padding: 6px 10px;
  background: rgba(255,255,255,0.05);
  border: 1px solid rgba(255,255,255,0.1);
  border-radius: 8px;
}
.control select {
  padding: 6px 8px;
  border-radius: 6px;
}
.control input[type="checkbox"] {
  transform: translateY(1px);
}

.status {
  display: flex;
  gap: 16px;
  align-items: center;
  font-size: 1rem;
}
.target .label { opacity: 0.8; margin-right: 6px; }
.target .value { font-weight: 700; font-size: 1.2rem; }

.board-label text { paint-order: stroke; stroke: rgba(0,0,0,0.2); stroke-width: 2px; }
.hover-tip text { paint-order: stroke; stroke: rgba(0,0,0,0.3); stroke-width: 2px; }

.stage {
  position: relative;
  display: grid;
  place-items: center;
  width: 100%;
  overflow-x: auto;
}

.problem-banner {
  position: fixed;
  top: calc(env(safe-area-inset-top, 0px) + 28px);
  left: 50%;
  transform: translateX(-50%);
  padding: 0;
  border: none;
  background: none;
  /* scale with the smaller viewport side so orientation doesn't change visual weight */
  font-size: clamp(28px, 12vmin, 96px);
  font-weight: 900;
  letter-spacing: 0.5px;
  color: #ffffff;
  text-shadow: none;
  z-index: 30;
}

.problem-banner.enter { animation: bannerEnter 450ms ease-out; }
.problem-banner.exit { animation: bannerExit 450ms ease-in forwards; }

@keyframes bannerEnter {
  0% { opacity: 0; transform: translate(-50%, -24px) rotate(-2deg); }
  60% { opacity: 1; transform: translate(-50%, 0px) rotate(0deg); }
  100% { opacity: 1; transform: translate(-50%, 0px) rotate(0deg); }
}

@keyframes bannerExit {
  0% { opacity: 1; transform: translate(-50%, 0px) rotate(0deg); }
  100% { opacity: 0; transform: translate(-50%, 60px) rotate(6deg); }
}

.floating-controls {
  position: fixed;
  right: calc(env(safe-area-inset-right, 0px) + 12px);
  bottom: calc(env(safe-area-inset-bottom, 0px) + 12px);
  z-index: 25;
  display: flex;
  align-items: center;
  gap: 8px;
  flex-wrap: nowrap;
  white-space: nowrap;
  touch-action: pan-y; /* favor vertical scroll at page level */
}
.floating-controls .controls-toggle { display: none; }
.floating-controls .controls-body { display: flex; align-items: center; gap: 8px; }
.floating-controls .control.small {
  display: flex;
  align-items: center;
  gap: 8px;
  height: 44px; /* unify container height */
  padding: 0 12px; /* no vertical padding -> consistent height */
  border-radius: 12px;
}
.floating-controls .control.small span {
  font-size: 16px; /* unify label text size */
  line-height: 1;
}
.floating-controls .control.small select {
  font-size: 16px; /* unify option text size */
  height: 32px; /* consistent control height */
  line-height: 32px;
  padding: 0 10px;
}
.floating-controls .control.small input[type="checkbox"] {
  width: 20px; height: 20px; /* match visual weight */
  margin: 0;
}

/* Mobile-friendly floating controls: prevent squeezing and overflow */
@media (max-width: 600px) {
  .floating-controls {
    right: 16px;
    left: auto;
    bottom: calc(env(safe-area-inset-bottom, 0px) + 16px);
    background: none;
    border: none;
    padding: 0;
    gap: 0;
    z-index: 40;
  }
  .floating-controls .controls-toggle {
    width: 56px;
    height: 56px;
    border-radius: 50%;
    background: rgba(20,20,28,0.9);
    color: #fff;
    border: 1px solid rgba(255,255,255,0.12);
    box-shadow: 0 6px 18px rgba(0,0,0,0.45);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .floating-controls .controls-body {
    position: fixed;
    right: calc(env(safe-area-inset-right, 0px) + 8px);
    left: calc(env(safe-area-inset-left, 0px) + 8px);
    bottom: calc(env(safe-area-inset-bottom, 0px) + 84px);
    display: none;
    width: auto; /* full width between insets */
    max-width: none;
    max-height: calc(100svh - (84px + 24px + env(safe-area-inset-top, 0px)));
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    background: rgba(16,16,24,0.95);
    border: 1px solid rgba(255,255,255,0.12);
    border-radius: 14px;
    padding: 8px;
    gap: 8px;
    z-index: 60;
  }
  .floating-controls.open .controls-body { display: flex; flex-wrap: wrap; }
  .floating-controls .control.small {
    height: 36px;
    padding: 0 8px;
    flex: 0 0 auto; /* do not stretch to fill row */
    margin: 4px;
  }
  .floating-controls .control.small span { font-size: 13px; white-space: nowrap; }
  .floating-controls .control.small select { font-size: 13px; height: 28px; width: auto; max-width: 60vw; }
  .floating-controls .control.small input[type="checkbox"] { width: 18px; height: 18px; }
}

@media (orientation: portrait) and (max-width: 900px) {
  .viewport .floating-controls { position: fixed; right: 16px; left: auto; bottom: calc(env(safe-area-inset-bottom, 0px) + 16px); z-index: 50; }
  .viewport .floating-controls .controls-body {
    right: calc(env(safe-area-inset-right, 0px) + 8px);
    left: calc(env(safe-area-inset-left, 0px) + 8px);
    max-width: none;
    width: auto;
    max-height: calc(100svh - (84px + 24px + env(safe-area-inset-top, 0px)));
  }
}

.fretboard-wrap { display: contents; }

.fretboard {
  cursor: pointer;
  user-select: none;
  touch-action: manipulation;
  display: block;
  margin: 0 auto;
  animation: subtleFloat 6s ease-in-out infinite;
  filter: drop-shadow(0 10px 30px rgba(0,0,0,0.35));
}

/* removed target-marker hint animation */

@keyframes subtleFloat {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-0.6px); }
}

/* Wrong answer feedback */
@keyframes shake {
  10%, 90% { transform: translate3d(-1px, 0, 0); }
  20%, 80% { transform: translate3d(2px, 0, 0); }
  30%, 50%, 70% { transform: translate3d(-4px, 0, 0); }
  40%, 60% { transform: translate3d(4px, 0, 0); }
}

/* removed will-change to avoid creating unexpected containing blocks for fixed elements */

.app-root.damage::after {
  /* FPS low-health style red vignette */
  content: '';
  position: fixed;
  inset: 0;
  pointer-events: none;
  background: radial-gradient(ellipse at center, rgba(255,0,0,0.0) 40%, rgba(255,0,0,0.18) 65%, rgba(255,0,0,0.32) 80%, rgba(255,0,0,0.48) 100%);
  animation: damagePulse 350ms ease-out forwards;
}

@keyframes damagePulse {
  0% { opacity: 0; }
  30% { opacity: 1; }
  100% { opacity: 0; }
}

/* apply shake to the main stage on wrong answer */
.stage.shake { animation: shake 350ms cubic-bezier(.36,.07,.19,.97) both; }

/* Responsive */
@media (max-width: 1700px) {
  .fretboard { width: 96vw; height: auto; }
}
@media (max-width: 600px) {
  .fretboard { width: 100vw; height: auto; }
}

/* Force landscape layout when device is in portrait (CSS rotate trick).
   Note: Real orientation lock is restricted on mobile browsers, so we
   rotate an inner viewport container for a consistent landscape experience. */
@media (orientation: portrait) {
  .viewport {
    position: fixed;
    top: 50%;
    left: 50%;
    width: 100svh; /* use small viewport to avoid iOS toolbar issues */
    height: 100svw;
    transform: translate(-50%, -50%) rotate(90deg);
    transform-origin: center center;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .viewport .stage {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    overflow: hidden;
  }
  .viewport .problem-banner { font-size: clamp(28px, 12vmin, 96px); }
  .viewport .fretboard-wrap { width: 100%; height: auto; display: flex; justify-content: center; align-items: center; margin: 6vmin 0; }
  .viewport .fretboard { width: min(100vh - 10vmin, 100%); max-height: calc(100vw - 12vmin); height: auto; max-width: 100%; }
  .viewport .problem-banner { position: absolute; top: 2vmin; left: 50%; transform: translateX(-50%); pointer-events: none; }
  .viewport .floating-controls { position: absolute; right: 12px; bottom: 12px; }
}

/* Small devices in landscape: let the board use almost full width */
@media (max-width: 900px) and (orientation: landscape) {
  .fretboard { width: 98vw; height: auto; }
}
